/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Application_Billets;

import PackageSecurite.Securite;
import TICKMAP.ReponseTICKMAP;
import TICKMAP.RequeteTICKMAP;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.security.InvalidKeyException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.cert.CertificateException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;

/**
 *
 * @author Benjamin
 */

public class Application_Confirmation extends javax.swing.JFrame {

    /**
     * Creates new form Application_Confirmation
     */
    private SecretKey HMAC;
    public ObjectInputStream ois;
    public ObjectOutputStream oos;
    public Socket sock;
    public Object information;
    
    float montantTotal;
    public Application_Confirmation() {
        initComponents();
    }
    
    public Application_Confirmation(Application_Billets parent, ReponseTICKMAP rep) throws IOException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, NoSuchProviderException, ClassNotFoundException {
        initComponents();
        this.HMAC = ((Application_Billets)parent).getHMAC();
        this.ois = ((Application_Billets)parent).getOis();
        this.oos = ((Application_Billets)parent).getOos();
        this.sock = ((Application_Billets)parent).getSocket();
        this.setTitle("Confirmation");
        setWindow(rep);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        destField = new javax.swing.JLabel();
        volField = new javax.swing.JLabel();
        prixField = new javax.swing.JLabel();
        nbreField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Confirmation de votre achat");

        jLabel2.setText("Vol : ");

        jLabel3.setText("Prix : ");

        jLabel4.setText("Nombre d'accompagnant :");

        okButton.setText("Confirmation");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Annuler");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Destination :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(destField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(volField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prixField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nbreField, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(109, 109, 109))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(48, 48, 48)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addGap(25, 25, 25)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(destField, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(volField))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(prixField))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nbreField))
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(230, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(okButton)
                        .addComponent(cancelButton))
                    .addGap(47, 47, 47)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            // TODO add your handling code here:
            envoieValidation(true);
        } catch (IOException ex) {
            Logger.getLogger(Application_Confirmation.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            receptionValidation();
        } catch (IOException | ClassNotFoundException | KeyStoreException | CertificateException | NoSuchAlgorithmException ex) {
            Logger.getLogger(Application_Confirmation.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        try {
            // TODO add your handling code here:
            envoieValidation(false);
            receptionValidation();
        } catch (IOException | ClassNotFoundException | KeyStoreException | CertificateException | NoSuchAlgorithmException ex) {
            Logger.getLogger(Application_Confirmation.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application_Confirmation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application_Confirmation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application_Confirmation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application_Confirmation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application_Confirmation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel destField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel nbreField;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel prixField;
    private javax.swing.JLabel volField;
    // End of variables declaration//GEN-END:variables
    private void setWindow(ReponseTICKMAP rep) throws IOException, ClassNotFoundException, NoSuchAlgorithmException, NoSuchProviderException, NoSuchPaddingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException 
    {
//        ReponseTICKMAP rep = null;
//        ois = new ObjectInputStream(sock.getInputStream());
//        rep = (ReponseTICKMAP)ois.readObject();
//        
//        if(rep.getChargeUtile().equals("CONFIRMATION_OK"))
//        {
            //o = Securite.dechiffrement(rep.getCleCrypte(), HMAC, false);
            information = rep.getMessage();
            setJtable(information);
//        }
        
    }

    private void setJtable(Object temp) {
        // 0 nbre de voyageurs
        // id du vol
        // prix du vol
        // destination
        
        String[] champ;
        champ = temp.toString().split("\\$");
        
        for(Object t:champ)
            System.out.println("boucle foreach : " + t);
        
        montantTotal = (Float.parseFloat(champ[2]) * Integer.parseInt(champ[0]));
        volField.setText(champ[1]);
        nbreField.setText(champ[0]);
        prixField.setText(String.valueOf(montantTotal));
        destField.setText(champ[3]);
    }

    private void envoieValidation(boolean par) throws IOException {
        RequeteTICKMAP req = null;
        if(par)
        {
            req = new RequeteTICKMAP(RequeteTICKMAP.REQ_VALIDATION, "validation_ok");
        }
        else
        {
            req = new RequeteTICKMAP(RequeteTICKMAP.REQ_MAJ, "validation_nok", information);
        }
        
        oos = new ObjectOutputStream(sock.getOutputStream());
        oos.writeObject(req);
        oos.flush();
    }

    private void receptionValidation() throws IOException, ClassNotFoundException, FileNotFoundException, KeyStoreException, CertificateException, NoSuchAlgorithmException {
        ReponseTICKMAP rep = null;
        try {                     

            ois = new ObjectInputStream(sock.getInputStream());
            rep = (ReponseTICKMAP)ois.readObject();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Application_Billets.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(rep.getChargeUtile().equals("VALIDATION_OK"))
        {
            System.out.println("information : " + information.toString());
            
            Application_Paiement ap = new Application_Paiement(this, information);
            ap.setVisible(true);
        }
    }
    public ObjectOutputStream getOos()
    {
        return this.oos;
    }
    public ObjectInputStream getOis()
    {
        return this.ois;
    }
    public Socket getSocket()
    {
        return this.sock;
    }
    public SecretKey getHMAC()
    {
        return this.HMAC;
    }
}
